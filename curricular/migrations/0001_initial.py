# Generated by Django 3.2 on 2021-10-25 15:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Curriculo',
            fields=[
                ('id', models.AutoField(help_text='Id do currículo', primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Insira um nome para o currículo. Ex.: SINUFVJM-2021', max_length=255)),
                ('quantidadeDisciplinas', models.IntegerField(help_text='Insira a quantidade de disciplinas do currículo')),
                ('quantidadePeriodos', models.IntegerField(help_text='Insira a quantidade de períodos do currículo')),
                ('cargaMinimaPorPeriodo', models.IntegerField(help_text='Insira a carga mínima permitida por período')),
                ('cargaMaximaPorPeriodo', models.IntegerField(help_text='Insira a carga máxima permitida por período')),
                ('quantidadeMinimaDisciplinasPorPeriodo', models.IntegerField(help_text='Insira a quantidade mínima permitida por período')),
                ('quantidadeMaximaDisciplinasPorPeriodo', models.IntegerField(help_text='Insira a quantidade máxima permitida por período')),
                ('quantidadePeriodosCicloBasico', models.IntegerField(help_text='Quantidade de períodos que compõe o ciclo básico', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.AutoField(help_text='Id do curso', primary_key=True, serialize=False)),
                ('codigo', models.CharField(help_text='Insira codigo para o curso. Ex.: SIN-UFVJM', max_length=100)),
                ('nome', models.CharField(help_text='Insira o nome do curso', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.AutoField(help_text='Id da disciplina', primary_key=True, serialize=False)),
                ('codigo', models.CharField(help_text='Insira um codigo para a disciplina.', max_length=10)),
                ('nome', models.CharField(help_text='Insira o nome da disciplina', max_length=255)),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curricular.curso')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(help_text='Id da grade', primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Insira o nome da grade', max_length=255)),
                ('solucao', models.BooleanField(default=False)),
                ('pc', models.FloatField(help_text='Peso do critério de créditos', null=True)),
                ('prd', models.FloatField(help_text='Peso do critério de custo do layout da grade', null=True)),
                ('pir', models.FloatField(help_text='Peso do critério de índices de retenção', null=True)),
                ('c', models.FloatField(help_text='Maior carga de créditos dentre todos os períodos', null=True)),
                ('rd', models.FloatField(help_text='Custo do layout da grade', null=True)),
                ('ir', models.FloatField(help_text='Maior somatório de índices de retenção dentre todos os períodos', null=True)),
                ('media', models.BooleanField(default=False, null=True)),
                ('mediana', models.BooleanField(default=False, null=True)),
                ('menorValor', models.BooleanField(default=False, null=True)),
                ('referencia', models.BooleanField(default=False, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('balanceada', models.BooleanField(default=False)),
                ('periodosRestantes', models.IntegerField(help_text='Períodos restantes pra a conclusão do curso do estudante', null=True)),
                ('periodoCronologico', models.IntegerField(help_text='Período contínuo em que se encontra o estudante', null=True)),
                ('gradeAluno', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('curriculo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curricular.curriculo')),
                ('gradeOriginal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='curricular.grade')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='GradeDisciplina',
            fields=[
                ('id', models.AutoField(help_text='Id da gradeDisciplina', primary_key=True, serialize=False)),
                ('ativo', models.BooleanField(default=True)),
                ('periodo', models.IntegerField(default=0, help_text='Período da disciplina')),
                ('creditos', models.IntegerField(default=0, help_text='Créditos da disciplina')),
                ('retencao', models.FloatField(default=0, help_text='Retenção da disciplina')),
                ('cicloBasico', models.BooleanField(default=False)),
                ('periodoFixo', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curricular.disciplina')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curricular.grade')),
            ],
            options={
                'ordering': ['grade', 'disciplina'],
            },
        ),
        migrations.CreateModel(
            name='Instituicao',
            fields=[
                ('id', models.AutoField(help_text='Id da instituição', primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Insira o nome da instituição', max_length=255, unique=True)),
                ('sigla', models.CharField(help_text='Insira a sigla da instituição', max_length=255, unique=True)),
                ('cidade', models.CharField(help_text='Insira a cidade da instituição', max_length=255)),
                ('estado', models.CharField(help_text='Insira o estado da instituição', max_length=255)),
                ('pais', models.CharField(help_text='Insira o país da instituição', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(help_text='Id do usuario', primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Insira o nome do usuário', max_length=255)),
                ('email', models.EmailField(help_text='Insira o email do usuário', max_length=255, unique=True)),
                ('senha', models.CharField(help_text='Insira a senha do usuário', max_length=255)),
                ('admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('gestor', models.BooleanField(default=False, verbose_name='Gestor')),
                ('aluno', models.BooleanField(default=False, verbose_name='Aluno')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('curso', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='curricular.curso')),
                ('instituicao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curricular.instituicao')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='UserCurso',
            fields=[
                ('id', models.AutoField(help_text='Id da relação UserCurso', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curricular.curso')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Requisito',
            fields=[
                ('id', models.AutoField(help_text='Id da gradeDisciplina', primary_key=True, serialize=False)),
                ('prerequisito', models.BooleanField(default=True)),
                ('corequisito', models.BooleanField(default=False)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gradeDisciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gradeDisciplina', to='curricular.gradedisciplina')),
                ('gradeDisciplinaRequisito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gradeDisciplinaRequisito', to='curricular.gradedisciplina')),
            ],
            options={
                'ordering': [],
            },
        ),
        migrations.CreateModel(
            name='Relacionamento',
            fields=[
                ('id', models.AutoField(help_text='Id do Relacionamento', primary_key=True, serialize=False)),
                ('relacionamento', models.IntegerField(default=0, help_text='Relacionamento entre das disciplinas')),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gradeDisciplinaRelacionamentoAnterior', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gradeDisciplinaRelacionamentoAnterior', to='curricular.gradedisciplina')),
                ('gradeDisciplinaRelacionamentoPosterior', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gradeDisciplinaRelacionamentoPosterior', to='curricular.gradedisciplina')),
            ],
            options={
                'ordering': [],
            },
        ),
        migrations.CreateModel(
            name='GradeDisciplinaCursar',
            fields=[
                ('id', models.AutoField(help_text='Id da gradeDisciplina', primary_key=True, serialize=False)),
                ('periodoFixo', models.BooleanField(default=False)),
                ('periodo', models.IntegerField(default=0, help_text='Período da disciplina')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curricular.grade')),
                ('gradeDisciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curricular.gradedisciplina')),
            ],
            options={
                'ordering': ['grade', 'gradeDisciplina'],
            },
        ),
        migrations.AddField(
            model_name='grade',
            name='usuario',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='curricular.usuario'),
        ),
        migrations.AddField(
            model_name='curso',
            name='instituicao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curricular.instituicao'),
        ),
        migrations.AddField(
            model_name='curriculo',
            name='curso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curricular.curso'),
        ),
        migrations.AddConstraint(
            model_name='requisito',
            constraint=models.UniqueConstraint(fields=('gradeDisciplina', 'gradeDisciplinaRequisito'), name='unique_requisito'),
        ),
        migrations.AddConstraint(
            model_name='relacionamento',
            constraint=models.UniqueConstraint(fields=('gradeDisciplinaRelacionamentoAnterior', 'gradeDisciplinaRelacionamentoPosterior'), name='unique_relacionamento_disciplinas'),
        ),
        migrations.AddConstraint(
            model_name='gradedisciplinacursar',
            constraint=models.UniqueConstraint(fields=('grade', 'gradeDisciplina'), name='unique_grade_disciplina_cursar'),
        ),
        migrations.AddConstraint(
            model_name='gradedisciplina',
            constraint=models.UniqueConstraint(fields=('grade', 'disciplina'), name='unique_grade_disciplina'),
        ),
    ]
